/*!
 * https://github.com/jhudson8/react-mixin-manager v0.3.0;  MIT license; Joe Hudson<joehud_AT_gmail.com>
 */
!function(n){"function"==typeof define&&define.amd?define(["react"],n):"undefined"!=typeof exports&&"undefined"!=typeof require?module.exports=function(e){n(e)}:n(React)}(function(n){function e(i,t,r){function s(i){if(!t[i]){var s=n.mixins._mixins[i],a=!1;if(!s)throw'invalid mixin "'+i+'"';"function"==typeof s&&(s=s(),a=!0),e(n.mixins._dependsOn[i],t,r),e(n.mixins._dependsInjected[i],t,r),t[i]=!0,a?e([s],t,r):r.push(s)}}function a(n){n&&(Array.isArray(n)?e(n,t,r):"string"==typeof n?s(n):r.push(n))}if(Array.isArray(i))for(var c=0;c<i.length;c++)a(i[c]);else a(i)}function i(e,i,t,r){var s=n.mixins;(r||!s._mixins[e])&&(s._dependsOn[e]=t.length&&t,s._mixins[e]=i)}function t(){}var r=n.createClass;n.createClass=function(e){return e.mixins&&(e.mixins=n.mixins.get(e.mixins)),r.apply(n,arguments)},n.mixins={get:function(){var n=[],i={};return e(Array.prototype.slice.call(arguments),i,n),n},inject:function(n){var e=this._dependsInjected[n];e||(e=this._dependsInjected[n]=[]),e.push(Array.prototype.slice.call(arguments,1))},alias:function(n){i(n,t,Array.prototype.slice.call(arguments,1),!1)},add:function(n,e){i(n,e,Array.prototype.slice.call(arguments,2),!1)},replace:function(n,e){i(n,e,Array.prototype.slice.call(arguments,2),!0)},exists:function(n){return this._mixins[n]||!1},_dependsOn:{},_dependsInjected:{},_mixins:{}}});