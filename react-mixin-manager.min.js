/*!
 * [react-mixin-manager](https://github.com/jhudson8/react-mixin-manager) v0.1.2;  MIT license; Joe Hudson<joehud@gmail.com>
 */
!function(n){"function"==typeof define&&define.amd?define(["react"],function(i){n(i)}):"undefined"!=typeof exports&&"undefined"!=typeof require?module.exports=function(i){n(i)}:n(React)}(function(n){function i(e,t,r){function s(i){if(!t[i]){var e=n.mixins._mixins[i];if(!e)throw"invalid mixin '"+i+"'";var a=n.mixins._dependsOn[i];if(a)for(var o=0;o<a.length;o++)s(a[o]);r.push(e),t[i]=!0}}for(var a=0;a<e.length;a++){var o=e[a];o&&(Array.isArray(o)?i(o,t,r):"string"==typeof o?s(o):r.push(o))}}function e(i,e,t,r){var s=n.mixins;if(!r&&s._mixins[i])throw"the '"+i+"' mixin already exists.  Use React.mixins.replace to override";s._dependsOn[i]=t.length&&t,s._mixins[i]=e}var t=n.createClass;n.createClass=function(i){return i.mixins&&(i.mixins=n.mixins.get(i.mixins)),t.apply(n,arguments)},n.mixins={get:function(){var n=[],e={};return i(Array.prototype.slice.call(arguments),e,n),n},add:function(n,i){e(n,i,Array.prototype.slice.call(arguments,2),!1)},replace:function(n,i){e(n,i,Array.prototype.slice.call(arguments,2),!0)},exists:function(n){return this._mixins[n]||!1},_dependsOn:{},_mixins:{}}});
