/*!
 * react-mixin-manager v0.1.0;  MIT license
 */
!function(i){"function"==typeof define&&define.amd?define(["react"],function(n){i(n)}):i("undefined"!=typeof exports&&"undefined"!=typeof require?require("react"):React)}(function(i){function n(e,r,t){function s(n){if(!r[n]){var e=i.mixins._mixins[n];if(!e)throw"invalid mixin '"+n+"'";var a=i.mixins._dependsOn[n];if(a)for(var o=0;o<a.length;o++)s(a[o]);t.push(e),r[n]=!0}}for(var a=0;a<e.length;a++){var o=e[a];o&&(Array.isArray(o)?n(o,r,t):"string"==typeof o?s(o):t.push(o))}}function e(n,e,r,t){var s=i.mixins;if(!t&&s._mixins[n])throw"the '"+n+"' mixin already exists.  Use React.mixins.replace to override";s._dependsOn[n]=r.length&&r,s._mixins[n]=e}var r=i.createClass;i.createClass=function(n){return n.mixins&&(n.mixins=i.mixins.get(n.mixins)),r.apply(i,arguments)},i.mixins={get:function(){var i=[],e={};return n(Array.prototype.slice.call(arguments),e,i),i},add:function(i,n){e(i,n,Array.prototype.slice.call(arguments,2),!1)},replace:function(i,n){e(i,n,Array.prototype.slice.call(arguments,2),!0)},exists:function(i){return this._mixins[i]||!1},_dependsOn:{},_mixins:{}}});