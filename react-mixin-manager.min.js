/*!
 * [react-mixin-manager](https://github.com/jhudson8/react-mixin-manager) v0.2.0;  MIT license; Joe Hudson<joehud@gmail.com>
 */
!function(n){"function"==typeof define&&define.amd?define(["react"],n):"undefined"!=typeof exports&&"undefined"!=typeof require?module.exports=function(i){n(i)}:n(React)}(function(n){function i(e,t,r){function s(e){if(!t[e]){var a=n.mixins._mixins[e],o=!1;if(!a)throw'invalid mixin "'+e+'"';"function"==typeof a&&(a=a(),o=!0);var f=n.mixins._dependsOn[e];if(f)for(var c=0;c<f.length;c++)s(f[c]);t[e]=!0,o?i([a],t,r):r.push(a)}}for(var a=0;a<e.length;a++){var o=e[a];o&&(Array.isArray(o)?i(o,t,r):"string"==typeof o?s(o):r.push(o))}}function e(i,e,t,r){var s=n.mixins;if(!r&&s._mixins[i])throw'the "'+i+'" mixin already exists.  Use React.mixins.replace to override';s._dependsOn[i]=t.length&&t,s._mixins[i]=e}function t(){}var r=n.createClass;n.createClass=function(i){return i.mixins&&(i.mixins=n.mixins.get(i.mixins)),r.apply(n,arguments)},n.mixins={get:function(){var n=[],e={};return i(Array.prototype.slice.call(arguments),e,n),n},group:function(n){e(n,t,Array.prototype.slice.call(arguments,1),!1)},add:function(n,i){e(n,i,Array.prototype.slice.call(arguments,2),!1)},replace:function(n,i){e(n,i,Array.prototype.slice.call(arguments,2),!0)},exists:function(n){return this._mixins[n]||!1},_dependsOn:{},_mixins:{}}});